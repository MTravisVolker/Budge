"""Initial migration

Revision ID: 323dbae84fae
Revises: 
Create Date: 2025-04-25 01:28:13.325616

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '323dbae84fae'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('oauth_provider', sa.String(length=50), nullable=True),
    sa.Column('oauth_account_id', sa.String(length=255), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('avatar_url', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('api_token',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('token', sa.String(), nullable=False),
    sa.Column('issued_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_index(op.f('ix_api_token_user_id'), 'api_token', ['user_id'], unique=False)
    op.create_table('audit_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('table_name', sa.String(length=50), nullable=False),
    sa.Column('row_id', sa.Integer(), nullable=False),
    sa.Column('field_name', sa.String(length=100), nullable=False),
    sa.Column('action', sa.String(length=20), nullable=False),
    sa.Column('value_before_change', sa.String(), nullable=True),
    sa.Column('value_after_change', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("action IN ('add', 'update', 'delete')", name='check_action'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audit_log_row_id'), 'audit_log', ['row_id'], unique=False)
    op.create_index(op.f('ix_audit_log_table_name'), 'audit_log', ['table_name'], unique=False)
    op.create_index(op.f('ix_audit_log_user_id'), 'audit_log', ['user_id'], unique=False)
    op.create_table('bill_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('archived', sa.Boolean(), nullable=False),
    sa.Column('highlight_color_hex', sa.String(length=7), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bill_status_name'), 'bill_status', ['name'], unique=False)
    op.create_index(op.f('ix_bill_status_user_id'), 'bill_status', ['user_id'], unique=False)
    op.create_table('category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('archived', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_category_name'), 'category', ['name'], unique=False)
    op.create_index(op.f('ix_category_user_id'), 'category', ['user_id'], unique=False)
    op.create_table('oauth_account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('provider', sa.String(length=50), nullable=False),
    sa.Column('account_id', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('provider', 'account_id', name='uq_provider_account')
    )
    op.create_index(op.f('ix_oauth_account_user_id'), 'oauth_account', ['user_id'], unique=False)
    op.create_table('recurrence',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('calculation', sa.String(length=20), nullable=True),
    sa.Column('archived', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_recurrence_name'), 'recurrence', ['name'], unique=False)
    op.create_index(op.f('ix_recurrence_user_id'), 'recurrence', ['user_id'], unique=False)
    op.create_table('bank_account',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('url', sa.String(length=100), nullable=True),
    sa.Column('recurrence', sa.Integer(), nullable=True),
    sa.Column('recurrence_value', sa.Integer(), nullable=True),
    sa.Column('archived', sa.Boolean(), nullable=False),
    sa.Column('font_color_hex', sa.String(length=7), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("font_color_hex ~ '^#[0-9A-Fa-f]{6}$'", name='check_font_color_hex'),
    sa.CheckConstraint("url ~ '^https?://'", name='check_url_format'),
    sa.CheckConstraint('recurrence_value > 0', name='check_recurrence_value'),
    sa.ForeignKeyConstraint(['recurrence'], ['recurrence.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bank_account_id'), 'bank_account', ['id'], unique=False)
    op.create_index(op.f('ix_bank_account_name'), 'bank_account', ['name'], unique=False)
    op.create_index(op.f('ix_bank_account_recurrence'), 'bank_account', ['recurrence'], unique=False)
    op.create_index(op.f('ix_bank_account_user_id'), 'bank_account', ['user_id'], unique=False)
    op.create_table('bank_account_instance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('bank_account', sa.UUID(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=False),
    sa.Column('pay_date', sa.Date(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('archived', sa.Boolean(), nullable=False),
    sa.Column('current_balance', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['bank_account'], ['bank_account.id'], ),
    sa.ForeignKeyConstraint(['status'], ['bill_status.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bank_account_instance_bank_account'), 'bank_account_instance', ['bank_account'], unique=False)
    op.create_index(op.f('ix_bank_account_instance_due_date'), 'bank_account_instance', ['due_date'], unique=False)
    op.create_index(op.f('ix_bank_account_instance_pay_date'), 'bank_account_instance', ['pay_date'], unique=False)
    op.create_index(op.f('ix_bank_account_instance_priority'), 'bank_account_instance', ['priority'], unique=False)
    op.create_index(op.f('ix_bank_account_instance_status'), 'bank_account_instance', ['status'], unique=False)
    op.create_index(op.f('ix_bank_account_instance_user_id'), 'bank_account_instance', ['user_id'], unique=False)
    op.create_table('bills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('default_amount_due', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('url', sa.String(length=100), nullable=True),
    sa.Column('archived', sa.Boolean(), nullable=False),
    sa.Column('default_draft_account', sa.UUID(), nullable=True),
    sa.Column('category', sa.Integer(), nullable=True),
    sa.Column('recurrence', sa.Integer(), nullable=True),
    sa.Column('recurrence_value', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("url ~ '^https?://'", name='check_url_format'),
    sa.CheckConstraint('recurrence_value > 0', name='check_recurrence_value'),
    sa.ForeignKeyConstraint(['category'], ['category.id'], ),
    sa.ForeignKeyConstraint(['default_draft_account'], ['bank_account.id'], ),
    sa.ForeignKeyConstraint(['recurrence'], ['recurrence.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bills_category'), 'bills', ['category'], unique=False)
    op.create_index(op.f('ix_bills_default_draft_account'), 'bills', ['default_draft_account'], unique=False)
    op.create_index(op.f('ix_bills_name'), 'bills', ['name'], unique=False)
    op.create_index(op.f('ix_bills_recurrence'), 'bills', ['recurrence'], unique=False)
    op.create_index(op.f('ix_bills_user_id'), 'bills', ['user_id'], unique=False)
    op.create_table('due_bills',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('bill', sa.Integer(), nullable=False),
    sa.Column('recurrence', sa.Integer(), nullable=True),
    sa.Column('recurrence_value', sa.Integer(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=False),
    sa.Column('pay_date', sa.Date(), nullable=True),
    sa.Column('min_amount_due', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('total_amount_due', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('archived', sa.Boolean(), nullable=False),
    sa.Column('confirmation', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('draft_account', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('recurrence_value > 0', name='check_recurrence_value'),
    sa.ForeignKeyConstraint(['bill'], ['bills.id'], ),
    sa.ForeignKeyConstraint(['draft_account'], ['bank_account.id'], ),
    sa.ForeignKeyConstraint(['recurrence'], ['recurrence.id'], ),
    sa.ForeignKeyConstraint(['status'], ['bill_status.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_due_bills_bill'), 'due_bills', ['bill'], unique=False)
    op.create_index(op.f('ix_due_bills_draft_account'), 'due_bills', ['draft_account'], unique=False)
    op.create_index(op.f('ix_due_bills_due_date'), 'due_bills', ['due_date'], unique=False)
    op.create_index(op.f('ix_due_bills_id'), 'due_bills', ['id'], unique=False)
    op.create_index(op.f('ix_due_bills_pay_date'), 'due_bills', ['pay_date'], unique=False)
    op.create_index(op.f('ix_due_bills_priority'), 'due_bills', ['priority'], unique=False)
    op.create_index(op.f('ix_due_bills_recurrence'), 'due_bills', ['recurrence'], unique=False)
    op.create_index(op.f('ix_due_bills_status'), 'due_bills', ['status'], unique=False)
    op.create_index(op.f('ix_due_bills_user_id'), 'due_bills', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_due_bills_user_id'), table_name='due_bills')
    op.drop_index(op.f('ix_due_bills_status'), table_name='due_bills')
    op.drop_index(op.f('ix_due_bills_recurrence'), table_name='due_bills')
    op.drop_index(op.f('ix_due_bills_priority'), table_name='due_bills')
    op.drop_index(op.f('ix_due_bills_pay_date'), table_name='due_bills')
    op.drop_index(op.f('ix_due_bills_id'), table_name='due_bills')
    op.drop_index(op.f('ix_due_bills_due_date'), table_name='due_bills')
    op.drop_index(op.f('ix_due_bills_draft_account'), table_name='due_bills')
    op.drop_index(op.f('ix_due_bills_bill'), table_name='due_bills')
    op.drop_table('due_bills')
    op.drop_index(op.f('ix_bills_user_id'), table_name='bills')
    op.drop_index(op.f('ix_bills_recurrence'), table_name='bills')
    op.drop_index(op.f('ix_bills_name'), table_name='bills')
    op.drop_index(op.f('ix_bills_default_draft_account'), table_name='bills')
    op.drop_index(op.f('ix_bills_category'), table_name='bills')
    op.drop_table('bills')
    op.drop_index(op.f('ix_bank_account_instance_user_id'), table_name='bank_account_instance')
    op.drop_index(op.f('ix_bank_account_instance_status'), table_name='bank_account_instance')
    op.drop_index(op.f('ix_bank_account_instance_priority'), table_name='bank_account_instance')
    op.drop_index(op.f('ix_bank_account_instance_pay_date'), table_name='bank_account_instance')
    op.drop_index(op.f('ix_bank_account_instance_due_date'), table_name='bank_account_instance')
    op.drop_index(op.f('ix_bank_account_instance_bank_account'), table_name='bank_account_instance')
    op.drop_table('bank_account_instance')
    op.drop_index(op.f('ix_bank_account_user_id'), table_name='bank_account')
    op.drop_index(op.f('ix_bank_account_recurrence'), table_name='bank_account')
    op.drop_index(op.f('ix_bank_account_name'), table_name='bank_account')
    op.drop_index(op.f('ix_bank_account_id'), table_name='bank_account')
    op.drop_table('bank_account')
    op.drop_index(op.f('ix_recurrence_user_id'), table_name='recurrence')
    op.drop_index(op.f('ix_recurrence_name'), table_name='recurrence')
    op.drop_table('recurrence')
    op.drop_index(op.f('ix_oauth_account_user_id'), table_name='oauth_account')
    op.drop_table('oauth_account')
    op.drop_index(op.f('ix_category_user_id'), table_name='category')
    op.drop_index(op.f('ix_category_name'), table_name='category')
    op.drop_table('category')
    op.drop_index(op.f('ix_bill_status_user_id'), table_name='bill_status')
    op.drop_index(op.f('ix_bill_status_name'), table_name='bill_status')
    op.drop_table('bill_status')
    op.drop_index(op.f('ix_audit_log_user_id'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_table_name'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_row_id'), table_name='audit_log')
    op.drop_table('audit_log')
    op.drop_index(op.f('ix_api_token_user_id'), table_name='api_token')
    op.drop_table('api_token')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
